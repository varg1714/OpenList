import{b6 as n,b as c}from"./index.6e7e7f0f.js";const i=(s="/",e="")=>n.post("/fs/get",{path:s,password:e}),d=(s="/",e="",t=1,o=0,a=!1,r)=>n.post("/fs/list",{path:s,password:e,page:t,per_page:o,refresh:a},{cancelToken:r}),u=(s="/",e="",t=!1)=>n.post("/fs/dirs",{path:s,password:e,force_root:t}),m=s=>n.post("/fs/mkdir",{path:s}),l=(s,e)=>n.post("/fs/rename",{path:s,name:e}),y=(s,e,t)=>n.post("/fs/rename",{src_dir:s,src_name_regex:e,new_name_regex:t}),v=(s,e,t)=>n.post("/fs/move",{src_dir:s,dst_dir:e,names:t}),h=(s,e)=>n.post("/fs/recursive_move",{src_dir:s,dst_dir:e}),x=(s,e,t)=>n.post("/fs/copy",{src_dir:s,dst_dir:e,names:t}),b=(s,e)=>n.post("/fs/remove",{dir:s,names:e}),w=(s,e)=>n.put("/fs/put",void 0,{headers:{"File-Path":encodeURIComponent(s),Password:e}}),R=(s,e,t)=>n.post(`/fs/add_${t}`,{path:s,urls:e}),f=async(s,e=!0)=>{try{const t=await c.get(s,{responseType:"blob",params:e?{ts:new Date().getTime()}:void 0}),o=await t.data.text(),a=t.headers["content-type"];return{content:o,contentType:a}}catch(t){return e?await f(s,!1):{content:`Failed to fetch ${s}: ${t}`,contentType:""}}},g=async(s,e,t="",o=1,a=100)=>n.post("/fs/search",{parent:s,keywords:e,page:o,per_page:a,password:t}),T=async(s=["/"],e=-1)=>n.post("/admin/index/build",{paths:s,max_depth:e}),k=async(s=[],e=-1)=>n.post("/admin/index/update",{paths:s,max_depth:e});export{d as a,f as b,x as c,v as d,b as e,i as f,l as g,w as h,m as i,h as j,y as k,u as l,g as m,T as n,R as o,k as u};
